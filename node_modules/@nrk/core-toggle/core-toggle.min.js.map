{"version":3,"file":"core-toggle.min.js","sources":["../utils.js","core-toggle.js"],"sourcesContent":["export const IS_BROWSER = typeof window !== 'undefined'\nexport const IS_ANDROID = IS_BROWSER && /(android)/i.test(navigator.userAgent) // Bad, but needed\nexport const IS_IOS = IS_BROWSER && /iPad|iPhone|iPod/.test(String(navigator.platform))\n\n// Mock HTMLElement for Node\nif (!IS_BROWSER && !global.HTMLElement) {\n  global.HTMLElement = class {}\n}\n\n/**\n* addEvent\n* @param {String} nodeName An unique ID of the event to bind - ensurnes single instance\n* @param {String} type The type of event to bind\n* @param {Function} handler The function to call on event\n* @param {Boolean|Object} options useCapture or options object for addEventListener. Defaults to false\n*/\nexport function addEvent (nodeName, type, handler, options = false, key) {\n  if (!IS_BROWSER || window[key = `event-${nodeName}-${type}`]) return // Ensure single instance\n  const node = (type === 'resize' || type === 'load') ? window : document\n  node.addEventListener(window[key] = type, (event) => (event.nodeName = nodeName) && handler(event), options)\n}\n\n/**\n* addStyle\n* @param {String} nodeName An unique ID of the event to bind - ensurnes single instance\n* @param {String} css The css to inject\n*/\nexport function addStyle (nodeName, css) {\n  const key = `style-${nodeName.toLowerCase()}`\n  const min = css.replace(/\\/\\*[^!][^*]*\\*\\//g, '').replace(/\\s*(^|[:;,{}]|$)\\s*/g, '$1')\n  document.getElementById(key) || document.head.insertAdjacentHTML('afterbegin', `<style id=\"${key}\">${min}</style>`)\n}\n\n/**\n* escapeHTML\n* @param {String} str A string with potential html tokens\n* @return {String} Escaped HTML string according to OWASP recommendation\n*/\nconst ESCAPE_MAP = { '&': '&amp;', '<': '&lt;', '>': '&gt;', '\"': '&quot;', '/': '&#x2F;', '\\'': '&#x27;' }\nexport function escapeHTML (str) {\n  return String(str || '').replace(/[&<>\"'/]/g, (char) => ESCAPE_MAP[char])\n}\n\n/**\n* closest\n* @param {Element} element Element to traverse up from\n* @param {String} selector A selector to search for matching parents or element itself\n* @return {Element|null}  Element which is the closest ancestor matching selector\n*/\nexport const closest = (() => {\n  const proto = typeof window === 'undefined' ? {} : window.Element.prototype\n  const match = proto.matches || proto.msMatchesSelector || proto.webkitMatchesSelector\n  return proto.closest ? (el, css) => el.closest(css) : (el, css) => {\n    // IE jumps to shadow SVG DOM on clicking an SVG defined by <use>.\n    // If so, jump back to <use> element and traverse real DOM\n    if (el.correspondingUseElement) el = el.correspondingUseElement\n    for (;el; el = el.parentElement) if (match.call(el, css)) return el\n    return null\n  }\n})()\n\n/**\n* dispatchEvent - with infinite loop prevention\n* @param {Element} elem The target object\n* @param {String} name The source object(s)\n* @param {Object} detail Detail object (bubbles and cancelable is set to true)\n* @return {Boolean} Whether the event was canceled\n*/\nexport function dispatchEvent (element, name, detail = {}) {\n  const ignore = `prevent_recursive_dispatch_maximum_callstack${name}`\n  let event\n\n  if (element[ignore]) return true // We are already processing this event, so skip sending a new one\n  else element[ignore] = true // Add name to dispatching ignore\n\n  if (typeof window.CustomEvent === 'function') {\n    event = new window.CustomEvent(name, { bubbles: true, cancelable: true, detail })\n  } else {\n    event = document.createEvent('CustomEvent')\n    event.initCustomEvent(name, true, true, detail)\n  }\n  // IE reports incorrect event.defaultPrevented\n  // but correct return value on element.dispatchEvent\n  const result = element.dispatchEvent(event)\n  element[ignore] = null // Remove name from dispatching ignore\n\n  return result // Follow W3C standard for return value\n}\n\n/**\n* getUUID\n* @return {String} A generated unique ID\n*/\nexport function getUUID () {\n  return Date.now().toString(36) + Math.random().toString(36).slice(2, 5)\n}\n\n/**\n * throttle\n * @param {Function} callback  The new throttled function\n * @param {Number} ms The threshold of milliseconds between each callback\n */\nexport function throttle (callback, ms) {\n  let timer\n  return function (...args) {\n    if (!timer) {\n      timer = setTimeout(function () {\n        callback.apply(this, args)\n        timer = null\n      }, ms)\n    }\n  }\n}\n\n/**\n * toggleAttribute (Ponyfill for IE and Edge, fixes #299)\n * @link https://developer.mozilla.org/en-US/docs/Web/API/Element/toggleAttribute\n * @param {Element} el  Single DOM Element\n * @param {String} name The name of the attribute to be toggled\n * @param {Boolean} force Force attribute to be added or removed regardless of previous state\n */\nexport function toggleAttribute (el, name, force = !this.hasAttribute(name)) {\n  if (!force === el.hasAttribute(name)) el[force ? 'setAttribute' : 'removeAttribute'](name, '')\n  return force\n}\n\n/**\n* queryAll\n* @param {String|NodeList|Array|Element} elements A CSS selector string, nodeList, element array, or single element\n* @param {Element} context Node to look for elements within\n* @return {Element[]} Array of elements\n*/\nexport function queryAll (elements, context = document) {\n  if (elements) {\n    if (elements.nodeType) return [elements]\n    if (typeof elements === 'string') return [].slice.call(context.querySelectorAll(elements))\n    if (elements.length) return [].slice.call(elements)\n  }\n  return []\n}\n","import { IS_ANDROID, IS_IOS, closest, dispatchEvent, getUUID, toggleAttribute } from '../utils'\n\nexport default class CoreToggle extends HTMLElement {\n  static get observedAttributes () { return ['hidden'] }\n\n  connectedCallback () {\n    if (IS_IOS) document.documentElement.style.cursor = 'pointer' // Fix iOS events for closing popups (https://stackoverflow.com/a/16006333/8819615)\n    if (!IS_ANDROID) this.setAttribute('aria-labelledby', this.button.id = this.button.id || getUUID()) // Andriod reads only label instead of content\n\n    this.value = this.button.textContent // Set up aria-label\n    this.setAttribute('role', 'group') // Help Edge\n    this.button.setAttribute('aria-expanded', this._open = !this.hidden)\n    this.button.setAttribute('aria-controls', this.id = this.id || getUUID())\n    document.addEventListener('keydown', this, true) // Use capture to enable checking defaultPrevented (from ESC key) in parents\n    document.addEventListener('click', this)\n  }\n\n  disconnectedCallback () {\n    this._button = null\n    document.removeEventListener('keydown', this, true)\n    document.removeEventListener('click', this)\n  }\n\n  attributeChangedCallback () {\n    if (this._open === this.hidden) { // this._open comparison ensures actual change\n      this.button.setAttribute('aria-expanded', this._open = !this.hidden)\n      try { this.querySelector('[autofocus]').focus() } catch (err) {}\n      dispatchEvent(this, 'toggle')\n    }\n  }\n\n  handleEvent (event) {\n    if (event.defaultPrevented) return\n    if (event.type === 'keydown' && event.keyCode === 27) {\n      const isButton = event.target.getAttribute && event.target.getAttribute('aria-expanded') === 'true'\n      const isHiding = isButton ? event.target === this.button : closest(event.target, this.nodeName) === this\n      if (isHiding) {\n        this.hidden = true\n        this.button.focus() // Move focus back to button\n        return event.preventDefault() // Prevent closing maximized Safari and other coreToggles\n      }\n    }\n    if (event.type === 'click') {\n      const btn = closest(event.target, 'a,button')\n      if (btn && !btn.hasAttribute('aria-expanded') && closest(event.target, this.nodeName) === this) dispatchEvent(this, 'toggle.select', btn)\n      else if (btn && btn.getAttribute('aria-controls') === this.id) this.hidden = !this.hidden\n      else if (this.popup && !this.contains(event.target)) this.hidden = true // Click in content or outside\n    }\n  }\n\n  get button () {\n    if (this._button && this._button.getAttribute('for') === this.id) return this._button // Speed up\n    return (this._button = this.id && document.querySelector(`[for=\"${this.id}\"]`)) || this.previousElementSibling\n  }\n\n  // aria-haspopup triggers forms mode in JAWS, therefore store as custom attr\n  get popup () { return this.getAttribute('popup') === 'true' || this.getAttribute('popup') || this.hasAttribute('popup') }\n\n  set popup (val) { this[val === false ? 'removeAttribute' : 'setAttribute']('popup', val) }\n\n  // Must set attribute for IE11\n  get hidden () { return this.hasAttribute('hidden') }\n\n  set hidden (val) { toggleAttribute(this, 'hidden', val) }\n\n  // Sets this.button aria-label, so visible button text can be augmentet with intension of button\n  // Example: Button text: \"01.02.2019\", aria-label: \"01.02.2019, Choose date\"\n  // Does not updates aria-label if not allready set to something else than this.popup\n  get value () { return this.button.value || this.button.textContent }\n\n  set value (data = false) {\n    if (!this.button || !this.popup.length) return\n    const button = this.button\n    const popup = (button.getAttribute('aria-label') || `,${this.popup}`).split(',')[1]\n    const label = data.textContent || data || '' // data can be Element, Object or String\n\n    if (popup === this.popup) {\n      button.value = data.value || label\n      button[data.innerHTML ? 'innerHTML' : 'textContent'] = data.innerHTML || label\n      button.setAttribute('aria-label', `${button.textContent},${this.popup}`)\n    }\n  }\n}\n"],"names":["IS_BROWSER","window","IS_ANDROID","test","navigator","userAgent","IS_IOS","String","platform","global","HTMLElement","proto","match","closest","Element","prototype","matches","msMatchesSelector","webkitMatchesSelector","el","css","correspondingUseElement","parentElement","call","dispatchEvent","element","name","event","detail","ignore","CustomEvent","bubbles","cancelable","document","createEvent","initCustomEvent","result","getUUID","Date","now","toString","Math","random","slice","documentElement","style","cursor","this","setAttribute","button","id","value","textContent","_open","hidden","addEventListener","_button","removeEventListener","querySelector","focus","err","defaultPrevented","type","keyCode","target","getAttribute","nodeName","preventDefault","btn","hasAttribute","popup","contains","previousElementSibling","val","force","toggleAttribute","data","length","split","label","innerHTML"],"mappings":"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"}