'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var React = _interopDefault(require('react'));
var jklCore = require('@fremtind/jkl-core');

function createCommonjsModule(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

var classnames = createCommonjsModule(function (module) {
/*!
  Copyright (c) 2017 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
/* global define */

(function () {

	var hasOwn = {}.hasOwnProperty;

	function classNames () {
		var classes = [];

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes.push(arg);
			} else if (Array.isArray(arg) && arg.length) {
				var inner = classNames.apply(null, arg);
				if (inner) {
					classes.push(inner);
				}
			} else if (argType === 'object') {
				for (var key in arg) {
					if (hasOwn.call(arg, key) && arg[key]) {
						classes.push(key);
					}
				}
			}
		}

		return classes.join(' ');
	}

	if ( module.exports) {
		classNames.default = classNames;
		module.exports = classNames;
	} else {
		window.classNames = classNames;
	}
}());
});
var classnames_1 = classnames.named;

var FieldGroup = function FieldGroup(_ref) {
  var legend = _ref.legend,
      className = _ref.className,
      children = _ref.children,
      helpLabel = _ref.helpLabel,
      errorLabel = _ref.errorLabel,
      _ref$variant = _ref.variant,
      variant = _ref$variant === void 0 ? "medium" : _ref$variant,
      forceCompact = _ref.forceCompact;
  var componentClassName = classnames("jkl-field-group", className);
  return /*#__PURE__*/React.createElement("fieldset", {
    className: componentClassName
  }, /*#__PURE__*/React.createElement("legend", {
    className: "jkl-field-group__legend"
  }, /*#__PURE__*/React.createElement(jklCore.Label, {
    variant: variant,
    forceCompact: forceCompact
  }, legend)), children, (helpLabel || errorLabel) && /*#__PURE__*/React.createElement(jklCore.SupportLabel, {
    helpLabel: helpLabel,
    errorLabel: errorLabel
  }));
};

exports.FieldGroup = FieldGroup;
