import React from 'react';

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

var IconSearch = function IconSearch() {
  return /*#__PURE__*/React.createElement("svg", {
    "data-testid": "jkl-search-icon",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/React.createElement("circle", {
    cx: "9.5",
    cy: "9.5",
    r: "8.5",
    stroke: "currentColor",
    strokeWidth: "1.5"
  }), /*#__PURE__*/React.createElement("path", {
    d: "M23 23L15 15",
    stroke: "currentColor",
    strokeWidth: "1.5"
  }));
};

var IconClear = function IconClear() {
  return /*#__PURE__*/React.createElement("svg", {
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/React.createElement("path", {
    d: "M3 21L21 3",
    stroke: "currentColor",
    strokeWidth: "1.5"
  }), /*#__PURE__*/React.createElement("path", {
    d: "M3 3L21 21",
    stroke: "currentColor",
    strokeWidth: "1.5"
  }));
};

var IconCalendar = function IconCalendar() {
  return /*#__PURE__*/React.createElement("svg", {
    viewBox: "0 0 24 24",
    fill: "none"
  }, /*#__PURE__*/React.createElement("path", {
    stroke: "currentColor",
    d: "M.5 3.5h23v20H.5zM6.5 0v7M17.5 0v7"
  }), /*#__PURE__*/React.createElement("path", {
    fill: "currentColor",
    d: "M4.5 9.5H6V11H4.5zM4.5 14H6v1.5H4.5zM4.5 18.5H6V20H4.5zM9 9.5h1.5V11H9zM9 14h1.5v1.5H9zM9 18.5h1.5V20H9zM13.5 9.5H15V11h-1.5zM13.5 14H15v1.5h-1.5zM13.5 18.5H15V20h-1.5zM18 9.5h1.5V11H18zM18 14h1.5v1.5H18zM18 18.5h1.5V20H18z"
  }));
};

function getIcon(iconType) {
  switch (iconType) {
    case "clear":
      return /*#__PURE__*/React.createElement(IconClear, null);

    case "search":
      return /*#__PURE__*/React.createElement(IconSearch, null);

    case "calendar":
      return /*#__PURE__*/React.createElement(IconCalendar, null);

    default:
      return null;
  }
}

var IconButton = function IconButton(_ref) {
  var _ref$iconType = _ref.iconType,
      iconType = _ref$iconType === void 0 ? "clear" : _ref$iconType,
      buttonTitle = _ref.buttonTitle,
      rest = _objectWithoutProperties(_ref, ["iconType", "buttonTitle"]);

  return /*#__PURE__*/React.createElement("button", _extends({
    type: "button",
    title: buttonTitle,
    "data-testid": "jkl-icon-button",
    className: "jkl-icon-button"
  }, rest), /*#__PURE__*/React.createElement("span", {
    "data-testid": "jkl-action-icon",
    className: "jkl-icon-button__icon"
  }, getIcon(iconType)), /*#__PURE__*/React.createElement("span", {
    className: "jkl-sr-only"
  }, buttonTitle));
};

export { IconButton };
